// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhoneBook.Data;

#nullable disable

namespace PhoneBook.Data.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20250203094159_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PhoneBook.Common.Models.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("InfoContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InfoTypeId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("InfoTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ContactInfoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContactInfoType");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReportStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportStatusId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ReportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<int>("TotalPersonByLocation")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPersonByPhoneNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportDetail");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReportStatus");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ContactInfo", b =>
                {
                    b.HasOne("PhoneBook.Common.Models.ContactInfoType", "InfoType")
                        .WithMany("ContactInfos")
                        .HasForeignKey("InfoTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PhoneBook.Common.Models.Person", "Person")
                        .WithMany("ContactInfos")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.Report", b =>
                {
                    b.HasOne("PhoneBook.Common.Models.ReportStatus", "ReportStatus")
                        .WithMany("Reports")
                        .HasForeignKey("ReportStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReportStatus");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ReportDetail", b =>
                {
                    b.HasOne("PhoneBook.Common.Models.Report", "Report")
                        .WithMany("ReportDetails")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ContactInfoType", b =>
                {
                    b.Navigation("ContactInfos");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.Person", b =>
                {
                    b.Navigation("ContactInfos");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.Report", b =>
                {
                    b.Navigation("ReportDetails");
                });

            modelBuilder.Entity("PhoneBook.Common.Models.ReportStatus", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
